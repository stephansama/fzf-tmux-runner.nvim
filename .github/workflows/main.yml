name: main
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
env:
  LUA_LS_VERSION: 3.7.4
concurrency:
  group: github.head_ref
  cancel-in-progress: true
jobs:
  lint:
    name: Code Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: JohnnyMorganz/stylua-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --check . -g '*.lua' -g '!deps/'
      - name: Lint Lua Code With Selene
        uses: AlejandroSuero/selene-linter-action@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --display-style=quiet .
  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 2
      - name: Setup Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: v0.11.3
      - name: Generate Docs
        run: make documentation
      - name: Check Docs Diff
        run: exit $(git status --porcelain doc | wc -l | tr -d " ")
  tests:
    needs:
      - lint
      - documentation
    runs-on: ubuntu-latest
    timeout-minutes: 1
    strategy:
      matrix:
        neovim_version: ['v0.9.5', 'v0.10.1', 'v0.11.3']
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - run: date +%F > todays-date
      - name: restore luals cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .ci/lua-ls
          key: ${{ env.LUA_LS_VERSION }}
      - name: Setup LuaLS
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: mkdir -p .ci/lua-ls && curl -sL "https://github.com/LuaLS/lua-language-server/releases/download/${{ env.LUA_LS_VERSION }}/lua-language-server-${{ env.LUA_LS_VERSION }}-linux-x64.tar.gz" | tar xzf - -C "${PWD}/.ci/lua-ls"
      - name: Setup Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: ${{ matrix.neovim_version }}
      - name: Run Luals
        run: |
          export PATH="${PWD}/.ci/lua-ls/bin:${PATH}"
          nvim --version
          make luals
      - name: Run Tests
        run: make test
  tests-nightly:
    name: Test on Neovim Nightly
    runs-on: ubuntu-latest
    timeout-minutes: 1
    continue-on-error: true
    needs:
      - lint
      - documentation
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - run: date +%F > todays-date
      - name: Restore Cache for Today's Nightly.
        uses: actions/cache@v4
        with:
          path: _neovim
          key: ${{ runner.os }}-x64-${{ hashFiles('todays-date') }}
      - name: Restore LuaLS Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .ci/lua-ls
          key: ${{ env.LUA_LS_VERSION }}
      - name: Setup LuaLS
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: mkdir -p .ci/lua-ls && curl -sL "https://github.com/LuaLS/lua-language-server/releases/download/${{ env.LUA_LS_VERSION }}/lua-language-server-${{ env.LUA_LS_VERSION }}-linux-x64.tar.gz" | tar xzf - -C "${PWD}/.ci/lua-ls"
      - name: Setup Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: nightly
      - name: Run LuaLS
        run: |
          export PATH="${PWD}/.ci/lua-ls/bin:${PATH}"
          nvim --version
          make luals
      - name: Run Tests
        run: make test
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: simple
          package-name: fzf-nerdfont.nvim
      - name: Tag Stable Version
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last Stable Release"
          git push origin stable
